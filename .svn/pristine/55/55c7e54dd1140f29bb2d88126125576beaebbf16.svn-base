/**
 * @FileName   Parking.java
 * @Project    parkpark
 * @Author     Hong Changpyo
 * @Date       2016. 1. 29.
 *
 *******************************************
 * @EditHistory
 * @Date         @Author        @Description
 * 2016. 1. 29.  Hong Changpyo     최초 작성
 *******************************************
 */

package parkinglot.model;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.apache.shiro.dao.DataAccessException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.web.multipart.MultipartFile;

import member.controller.MemberBean;
import parkinglot.controller.ParkingBean;
import parkinglot.controller.S_ParkingBean;
import parkinglot.controller.YogumBean;


@Repository
public class Parking implements DataInter{
	@Autowired
	private ParkingInter parkingInter;
	
	//공영주차장 전체데이터
	//SqlSessionDaoSupport의 getSqlSession()을 이용해 mapper에 접근
	@Override
	public List p_listAll() throws DataAccessException {
		return parkingInter.p_selectAllData();
	}
	
	//공유주차장 전체데이터
	@Override
	public List s_listAll() throws DataAccessException {
		return parkingInter.s_selectAllData();
	}

	//공영주차장 검색데이터
	@Override
	public List p_search(ParkingBean bean) throws DataAccessException {
		//검색결과를 list로 반환
		List list = parkingInter.p_selectSearch(bean);
		
		//검색 결과가 없으면 전체 자료를 list에 반환
		if(list == null || list.isEmpty()){        
			list = parkingInter.p_selectAllData();
		}
		return list;
	}
		
	//공유주차장 검색데이터
	@Override
	public List s_search(ParkingBean bean) throws DataAccessException {
		//검색결과를 list로 반환
		List list = parkingInter.s_selectSearch(bean);
		
		//검색 결과가 없으면 전체 자료를 list에 반환
		if(list == null || list.isEmpty()){        
			list = parkingInter.s_selectAllData();
		}
		return list;
	}
	
	
	//공유주차장 등록
	@Override
	public boolean shareInsert(S_ParkingBean bean)throws DataAccessException {
	    //파일처리  
		MultipartFile uploadfile = bean.getUploadfile();
	        if (uploadfile != null) {
	            String fileName = uploadfile.getOriginalFilename();
	            bean.setS_image(fileName); //이미지 이름
	            try {
	                // 1. FileOutputStream 사용
	                // byte[] fileData = file.getBytes();
	                // FileOutputStream output = new FileOutputStream("C:/images/" + fileName);
	                // output.write(fileData);
	                 
	                // 2. File 사용
	                File file = new File("C:/parkshare/boots_parkpark/src/main/webapp/resources/img_share/" + fileName);
	                uploadfile.transferTo(file);
	                System.out.println("이미지 업로드 완료");
	            } catch (IOException e) {
	                e.printStackTrace();
	            } // try - catch
	        } // if
	        // 데이터 베이스 처리를 현재 위치에서 처리
		return parkingInter.shareInsert(bean); //나머지 공유주차장 정보등록  
	}
	
	//우리지역(구단위) 평균요금 보기
	@Override
	public int checkYogum(YogumBean bean) throws DataAccessException{
		int pay = 0; 
		YogumDto yogumDto = parkingInter.checkYogum(bean);
		if(yogumDto != null){ //서울시 구이면
			pay = yogumDto.getPay(); //DB에서 해당 구의 평균요금 가져옴
		}
		//서울시 구가 아니면 pay = 0을 return 
		return pay; 
	}
	
}
